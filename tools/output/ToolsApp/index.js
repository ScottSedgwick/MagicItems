// Generated by purs version 0.15.15
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Int from "../Data.Int/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Effect_Class from "../Effect.Class/index.js";
import * as Effect_Random from "../Effect.Random/index.js";
import * as Flame_Html_Attribute_Internal from "../Flame.Html.Attribute.Internal/index.js";
import * as Flame_Html_Element from "../Flame.Html.Element/index.js";
import * as Flame_Html_Event from "../Flame.Html.Event/index.js";
import * as Simple_JSON from "../Simple.JSON/index.js";
import * as Web_HTML from "../Web.HTML/index.js";
import * as Web_HTML_Window from "../Web.HTML.Window/index.js";
import * as Web_Storage_Storage from "../Web.Storage.Storage/index.js";
var recordWriteForeign = /* #__PURE__ */ Simple_JSON.recordWriteForeign();
var attackRollsIsSymbol = {
    reflectSymbol: function () {
        return "attackRolls";
    }
};
var advantageIsSymbol = {
    reflectSymbol: function () {
        return "advantage";
    }
};
var consWriteForeignFields = /* #__PURE__ */ Simple_JSON.consWriteForeignFields(advantageIsSymbol)(Simple_JSON.writeForeignBoolean);
var attackBonusIsSymbol = {
    reflectSymbol: function () {
        return "attackBonus";
    }
};
var attackRollIsSymbol = {
    reflectSymbol: function () {
        return "attackRoll";
    }
};
var writeForeignArray = /* #__PURE__ */ Simple_JSON.writeForeignArray(Simple_JSON.writeForeignInt);
var damageDiceIsSymbol = {
    reflectSymbol: function () {
        return "damageDice";
    }
};
var damageBonusIsSymbol = {
    reflectSymbol: function () {
        return "damageBonus";
    }
};
var damageRollIsSymbol = {
    reflectSymbol: function () {
        return "damageRoll";
    }
};
var damageTypeIsSymbol = {
    reflectSymbol: function () {
        return "damageType";
    }
};
var diceCountIsSymbol = {
    reflectSymbol: function () {
        return "diceCount";
    }
};
var diceTypeIsSymbol = {
    reflectSymbol: function () {
        return "diceType";
    }
};
var descriptionIsSymbol = {
    reflectSymbol: function () {
        return "description";
    }
};
var consWriteForeignFields1 = /* #__PURE__ */ Simple_JSON.consWriteForeignFields(descriptionIsSymbol)(Simple_JSON.writeForeignString);
var disadvantageIsSymbol = {
    reflectSymbol: function () {
        return "disadvantage";
    }
};
var consWriteForeignFields2 = /* #__PURE__ */ Simple_JSON.consWriteForeignFields(disadvantageIsSymbol)(Simple_JSON.writeForeignBoolean);
var targetACIsSymbol = {
    reflectSymbol: function () {
        return "targetAC";
    }
};
var savingThrowsIsSymbol = {
    reflectSymbol: function () {
        return "savingThrows";
    }
};
var saveBonusIsSymbol = {
    reflectSymbol: function () {
        return "saveBonus";
    }
};
var saveRollIsSymbol = {
    reflectSymbol: function () {
        return "saveRoll";
    }
};
var targetDCIsSymbol = {
    reflectSymbol: function () {
        return "targetDC";
    }
};
var writeJSON = /* #__PURE__ */ Simple_JSON.writeJSON(/* #__PURE__ */ recordWriteForeign(/* #__PURE__ */ Simple_JSON.consWriteForeignFields(attackRollsIsSymbol)(/* #__PURE__ */ Simple_JSON.writeForeignArray(/* #__PURE__ */ recordWriteForeign(/* #__PURE__ */ consWriteForeignFields(/* #__PURE__ */ Simple_JSON.consWriteForeignFields(attackBonusIsSymbol)(Simple_JSON.writeForeignInt)(/* #__PURE__ */ Simple_JSON.consWriteForeignFields(attackRollIsSymbol)(writeForeignArray)(/* #__PURE__ */ Simple_JSON.consWriteForeignFields(damageDiceIsSymbol)(/* #__PURE__ */ Simple_JSON.writeForeignArray(/* #__PURE__ */ recordWriteForeign(/* #__PURE__ */ Simple_JSON.consWriteForeignFields(damageBonusIsSymbol)(Simple_JSON.writeForeignInt)(/* #__PURE__ */ Simple_JSON.consWriteForeignFields(damageRollIsSymbol)(writeForeignArray)(/* #__PURE__ */ Simple_JSON.consWriteForeignFields(damageTypeIsSymbol)(Simple_JSON.writeForeignString)(/* #__PURE__ */ Simple_JSON.consWriteForeignFields(diceCountIsSymbol)(Simple_JSON.writeForeignInt)(/* #__PURE__ */ Simple_JSON.consWriteForeignFields(diceTypeIsSymbol)(Simple_JSON.writeForeignInt)(Simple_JSON.nilWriteForeignFields)()()())()()())()()())()()())()()())))(/* #__PURE__ */ consWriteForeignFields1(/* #__PURE__ */ consWriteForeignFields2(/* #__PURE__ */ Simple_JSON.consWriteForeignFields(targetACIsSymbol)(Simple_JSON.writeForeignInt)(Simple_JSON.nilWriteForeignFields)()()())()()())()()())()()())()()())()()())()()())))(/* #__PURE__ */ Simple_JSON.consWriteForeignFields(savingThrowsIsSymbol)(/* #__PURE__ */ Simple_JSON.writeForeignArray(/* #__PURE__ */ recordWriteForeign(/* #__PURE__ */ consWriteForeignFields(/* #__PURE__ */ consWriteForeignFields1(/* #__PURE__ */ consWriteForeignFields2(/* #__PURE__ */ Simple_JSON.consWriteForeignFields(saveBonusIsSymbol)(Simple_JSON.writeForeignInt)(/* #__PURE__ */ Simple_JSON.consWriteForeignFields(saveRollIsSymbol)(writeForeignArray)(/* #__PURE__ */ Simple_JSON.consWriteForeignFields(targetDCIsSymbol)(/* #__PURE__ */ Simple_JSON.writeForeignMaybe(Simple_JSON.writeForeignInt))(Simple_JSON.nilWriteForeignFields)()()())()()())()()())()()())()()())()()())))(Simple_JSON.nilWriteForeignFields)()()())()()()));
var max = /* #__PURE__ */ Data_Ord.max(Data_Ord.ordInt);
var min = /* #__PURE__ */ Data_Ord.min(Data_Ord.ordInt);
var toNodeArray = /* #__PURE__ */ Flame_Html_Element.toNodeArray(Flame_Html_Element.toNodeNodeDataNodeData);
var toNodeArray1 = /* #__PURE__ */ Flame_Html_Element.toNodeArray(Flame_Html_Element.toNodeHtmlHtml);
var div = /* #__PURE__ */ Flame_Html_Element.div(toNodeArray)(toNodeArray1);
var class$prime = /* #__PURE__ */ Flame_Html_Attribute_Internal["class$prime"](Flame_Html_Attribute_Internal.toClassListString);
var show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);
var div_ = /* #__PURE__ */ Flame_Html_Element.div_(toNodeArray1);
var input = /* #__PURE__ */ Flame_Html_Element.input(toNodeArray);
var span = /* #__PURE__ */ Flame_Html_Element.span(toNodeArray)(toNodeArray1);
var label = /* #__PURE__ */ Flame_Html_Element.label(toNodeArray)(toNodeArray1);
var span_ = /* #__PURE__ */ Flame_Html_Element.span_(toNodeArray1);
var i_ = /* #__PURE__ */ Flame_Html_Element.i_(toNodeArray1);
var button = /* #__PURE__ */ Flame_Html_Element.button(toNodeArray)(toNodeArray1);
var article_ = /* #__PURE__ */ Flame_Html_Element.article_(toNodeArray1);
var nav_ = /* #__PURE__ */ Flame_Html_Element.nav_(toNodeArray1);
var readRecord = /* #__PURE__ */ Simple_JSON.readRecord();
var readFieldsCons = /* #__PURE__ */ Simple_JSON.readFieldsCons(advantageIsSymbol)(Simple_JSON.readBoolean);
var readArray = /* #__PURE__ */ Simple_JSON.readArray(Simple_JSON.readInt);
var readFieldsCons1 = /* #__PURE__ */ Simple_JSON.readFieldsCons(descriptionIsSymbol)(Simple_JSON.readString);
var readFieldsCons2 = /* #__PURE__ */ Simple_JSON.readFieldsCons(disadvantageIsSymbol)(Simple_JSON.readBoolean);
var readJSON = /* #__PURE__ */ Simple_JSON.readJSON(/* #__PURE__ */ readRecord(/* #__PURE__ */ Simple_JSON.readFieldsCons(attackRollsIsSymbol)(/* #__PURE__ */ Simple_JSON.readArray(/* #__PURE__ */ readRecord(/* #__PURE__ */ readFieldsCons(/* #__PURE__ */ Simple_JSON.readFieldsCons(attackBonusIsSymbol)(Simple_JSON.readInt)(/* #__PURE__ */ Simple_JSON.readFieldsCons(attackRollIsSymbol)(readArray)(/* #__PURE__ */ Simple_JSON.readFieldsCons(damageDiceIsSymbol)(/* #__PURE__ */ Simple_JSON.readArray(/* #__PURE__ */ readRecord(/* #__PURE__ */ Simple_JSON.readFieldsCons(damageBonusIsSymbol)(Simple_JSON.readInt)(/* #__PURE__ */ Simple_JSON.readFieldsCons(damageRollIsSymbol)(readArray)(/* #__PURE__ */ Simple_JSON.readFieldsCons(damageTypeIsSymbol)(Simple_JSON.readString)(/* #__PURE__ */ Simple_JSON.readFieldsCons(diceCountIsSymbol)(Simple_JSON.readInt)(/* #__PURE__ */ Simple_JSON.readFieldsCons(diceTypeIsSymbol)(Simple_JSON.readInt)(Simple_JSON.readFieldsNil)()())()())()())()())()())))(/* #__PURE__ */ readFieldsCons1(/* #__PURE__ */ readFieldsCons2(/* #__PURE__ */ Simple_JSON.readFieldsCons(targetACIsSymbol)(Simple_JSON.readInt)(Simple_JSON.readFieldsNil)()())()())()())()())()())()())()())))(/* #__PURE__ */ Simple_JSON.readFieldsCons(savingThrowsIsSymbol)(/* #__PURE__ */ Simple_JSON.readArray(/* #__PURE__ */ readRecord(/* #__PURE__ */ readFieldsCons(/* #__PURE__ */ readFieldsCons1(/* #__PURE__ */ readFieldsCons2(/* #__PURE__ */ Simple_JSON.readFieldsCons(saveBonusIsSymbol)(Simple_JSON.readInt)(/* #__PURE__ */ Simple_JSON.readFieldsCons(saveRollIsSymbol)(readArray)(/* #__PURE__ */ Simple_JSON.readFieldsCons(targetDCIsSymbol)(/* #__PURE__ */ Simple_JSON.readMaybe(Simple_JSON.readInt))(Simple_JSON.readFieldsNil)()())()())()())()())()())()())))(Simple_JSON.readFieldsNil)()())()()));
var eqRec = /* #__PURE__ */ Data_Eq.eqRec()(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(targetDCIsSymbol)(/* #__PURE__ */ Data_Maybe.eqMaybe(Data_Eq.eqInt)))()(saveRollIsSymbol)(/* #__PURE__ */ Data_Eq.eqArray(Data_Eq.eqInt)))()(saveBonusIsSymbol)(Data_Eq.eqInt))()(disadvantageIsSymbol)(Data_Eq.eqBoolean))()(descriptionIsSymbol)(Data_Eq.eqString))()(advantageIsSymbol)(Data_Eq.eqBoolean));
var pure1 = /* #__PURE__ */ Control_Applicative.pure(Effect_Aff.applicativeAff);
var map = /* #__PURE__ */ Data_Functor.map(Effect_Aff.functorAff);
var liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
var $$delete = /* #__PURE__ */ Data_Array["delete"](eqRec);
var nav = /* #__PURE__ */ Flame_Html_Element.nav(toNodeArray)(toNodeArray1);
var main = /* #__PURE__ */ Flame_Html_Element.main(toNodeArray)(toNodeArray1);
var header = /* #__PURE__ */ Flame_Html_Element.header(toNodeArray)(toNodeArray1);
var h6 = /* #__PURE__ */ Flame_Html_Element.h6(toNodeArray)(toNodeArray1);
var div_1 = /* #__PURE__ */ Flame_Html_Element.div_(/* #__PURE__ */ Flame_Html_Element.toNodeArray(toNodeArray1));
var map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);
var Update = /* #__PURE__ */ (function () {
    function Update(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Update.create = function (value0) {
        return function (value1) {
            return new Update(value0, value1);
        };
    };
    return Update;
})();
var Description = /* #__PURE__ */ (function () {
    function Description(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Description.create = function (value0) {
        return function (value1) {
            return new Description(value0, value1);
        };
    };
    return Description;
})();
var Bonus = /* #__PURE__ */ (function () {
    function Bonus(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Bonus.create = function (value0) {
        return function (value1) {
            return new Bonus(value0, value1);
        };
    };
    return Bonus;
})();
var DC = /* #__PURE__ */ (function () {
    function DC(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    DC.create = function (value0) {
        return function (value1) {
            return new DC(value0, value1);
        };
    };
    return DC;
})();
var Roll = /* #__PURE__ */ (function () {
    function Roll(value0) {
        this.value0 = value0;
    };
    Roll.create = function (value0) {
        return new Roll(value0);
    };
    return Roll;
})();
var Remove = /* #__PURE__ */ (function () {
    function Remove(value0) {
        this.value0 = value0;
    };
    Remove.create = function (value0) {
        return new Remove(value0);
    };
    return Remove;
})();
var Advantage = /* #__PURE__ */ (function () {
    function Advantage(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Advantage.create = function (value0) {
        return function (value1) {
            return new Advantage(value0, value1);
        };
    };
    return Advantage;
})();
var Disadvantage = /* #__PURE__ */ (function () {
    function Disadvantage(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Disadvantage.create = function (value0) {
        return function (value1) {
            return new Disadvantage(value0, value1);
        };
    };
    return Disadvantage;
})();
var Add = /* #__PURE__ */ (function () {
    function Add() {

    };
    Add.value = new Add();
    return Add;
})();
var AddAttackRoll = /* #__PURE__ */ (function () {
    function AddAttackRoll() {

    };
    AddAttackRoll.value = new AddAttackRoll();
    return AddAttackRoll;
})();
var RemoveAttackRoll = /* #__PURE__ */ (function () {
    function RemoveAttackRoll(value0) {
        this.value0 = value0;
    };
    RemoveAttackRoll.create = function (value0) {
        return new RemoveAttackRoll(value0);
    };
    return RemoveAttackRoll;
})();
var RollAttackRoll = /* #__PURE__ */ (function () {
    function RollAttackRoll(value0) {
        this.value0 = value0;
    };
    RollAttackRoll.create = function (value0) {
        return new RollAttackRoll(value0);
    };
    return RollAttackRoll;
})();
var Save = /* #__PURE__ */ (function () {
    function Save(value0) {
        this.value0 = value0;
    };
    Save.create = function (value0) {
        return new Save(value0);
    };
    return Save;
})();
var SaveState = /* #__PURE__ */ (function () {
    function SaveState() {

    };
    SaveState.value = new SaveState();
    return SaveState;
})();
var StateSaved = /* #__PURE__ */ (function () {
    function StateSaved(value0) {
        this.value0 = value0;
    };
    StateSaved.create = function (value0) {
        return new StateSaved(value0);
    };
    return StateSaved;
})();
var LoadState = /* #__PURE__ */ (function () {
    function LoadState() {

    };
    LoadState.value = new LoadState();
    return LoadState;
})();
var StateLoaded = /* #__PURE__ */ (function () {
    function StateLoaded(value0) {
        this.value0 = value0;
    };
    StateLoaded.create = function (value0) {
        return new StateLoaded(value0);
    };
    return StateLoaded;
})();
var ClearState = /* #__PURE__ */ (function () {
    function ClearState() {

    };
    ClearState.value = new ClearState();
    return ClearState;
})();
var updateArray = function (dictEq) {
    var eq1 = Data_Eq.eq(dictEq);
    return function (arr) {
        return function (item) {
            return function (newItem) {
                var v = Data_Array.findIndex(function (x) {
                    return eq1(x)(item);
                })(arr);
                if (v instanceof Data_Maybe.Nothing) {
                    return arr;
                };
                if (v instanceof Data_Maybe.Just) {
                    var v1 = Data_Array.updateAt(v.value0)(newItem)(arr);
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return arr;
                    };
                    if (v1 instanceof Data_Maybe.Just) {
                        return v1.value0;
                    };
                    throw new Error("Failed pattern match at ToolsApp (line 178, column 17 - line 180, column 28): " + [ v1.constructor.name ]);
                };
                throw new Error("Failed pattern match at ToolsApp (line 176, column 3 - line 180, column 28): " + [ v.constructor.name ]);
            };
        };
    };
};
var updateArray1 = /* #__PURE__ */ updateArray(eqRec);
var saveState = function (model) {
    return function __do() {
        var w = Web_HTML.window();
        var s = Web_HTML_Window.localStorage(w)();
        var json = writeJSON(model);
        Web_Storage_Storage.setItem("magiitems-tools-diceroller")(json)(s)();
        return model;
    };
};
var saveRoll = function (save) {
    if (save.saveRoll.length === 2) {
        var $348 = [ save.advantage, save.disadvantage ];
        if ($348.length === 2 && ($348[0] && !$348[1])) {
            return max(save["saveRoll"][0])(save["saveRoll"][1]);
        };
        if ($348.length === 2 && (!$348[0] && $348[1])) {
            return min(save["saveRoll"][0])(save["saveRoll"][1]);
        };
        return save["saveRoll"][0];
    };
    return 0;
};
var saveLine2 = function (save) {
    if (save.saveRoll.length === 0) {
        return Data_Maybe.Nothing.value;
    };
    if (save.targetDC instanceof Data_Maybe.Nothing) {
        return Data_Maybe.Nothing.value;
    };
    if (save.targetDC instanceof Data_Maybe.Just) {
        var $357 = (saveRoll(save) + save.saveBonus | 0) >= save.targetDC.value0;
        if ($357) {
            return new Data_Maybe.Just(div([ class$prime("primary") ])([ Flame_Html_Element.text("Target DC: " + (show(save.targetDC.value0) + (", " + "Success!"))) ]));
        };
        return new Data_Maybe.Just(div([ class$prime("error") ])([ Flame_Html_Element.text("Target DC: " + (show(save.targetDC.value0) + (", " + "Failure!"))) ]));
    };
    throw new Error("Failed pattern match at ToolsApp (line 263, column 7 - line 268, column 114): " + [ save.targetDC.constructor.name ]);
};
var saveLine1 = function (save) {
    if (save.saveRoll.length === 2) {
        var $360 = save.advantage === save.disadvantage;
        if ($360) {
            return "Roll [" + (show(save["saveRoll"][0]) + ("] + Bonus [" + (show(save.saveBonus) + ("] = " + show(saveRoll(save) + save.saveBonus | 0)))));
        };
        return "Roll [" + (show(save["saveRoll"][0]) + ("," + (show(save["saveRoll"][1]) + ("] + Bonus [" + (show(save.saveBonus) + ("] = " + show(saveRoll(save) + save.saveBonus | 0)))))));
    };
    return "-";
};
var showSaveResult = function (save) {
    var v = saveLine2(save);
    if (v instanceof Data_Maybe.Nothing) {
        return div_([ Flame_Html_Element.text(saveLine1(save)) ]);
    };
    if (v instanceof Data_Maybe.Just) {
        return div_([ div_([ Flame_Html_Element.text(saveLine1(save)) ]), v.value0 ]);
    };
    throw new Error("Failed pattern match at ToolsApp (line 242, column 3 - line 248, column 8): " + [ v.constructor.name ]);
};
var rollDice = function (n) {
    return Effect_Random.randomInt(1)(n);
};
var rollSave = function (save) {
    return function __do() {
        var a = rollDice(20)();
        var b = rollDice(20)();
        var roll = [ a, b ];
        return {
            advantage: save.advantage,
            description: save.description,
            disadvantage: save.disadvantage,
            saveBonus: save.saveBonus,
            targetDC: save.targetDC,
            saveRoll: roll
        };
    };
};
var mkText = function (caption) {
    return function (msg) {
        return function (value) {
            return div([ class$prime("field border") ])([ input([ Flame_Html_Attribute_Internal["type$prime"]("text"), Flame_Html_Attribute_Internal.value(value), Flame_Html_Event.onInput(msg) ]), span([ class$prime("helper") ])([ Flame_Html_Element.text(caption) ]) ]);
        };
    };
};
var mkCheckbox = function (caption) {
    return function (icon) {
        return function (msg) {
            return function (value) {
                return label([ class$prime("switch icon") ])([ input([ Flame_Html_Attribute_Internal["type$prime"]("checkbox"), Flame_Html_Attribute_Internal.checked(value), Flame_Html_Event.onCheck(msg) ]), span_([ i_([ Flame_Html_Element.text(icon) ]) ]), div([ class$prime("tooltip") ])([ Flame_Html_Element.text(caption) ]) ]);
            };
        };
    };
};
var mkButton = function (msg) {
    return function (icon) {
        return function (tooltip) {
            return button([ class$prime("square round extra"), Flame_Html_Event.onClick(msg) ])([ i_([ Flame_Html_Element.text(icon) ]), div([ class$prime("tooltip") ])([ Flame_Html_Element.text(tooltip) ]) ]);
        };
    };
};
var viewAttackRoll = function (attack) {
    return article_([ nav_([ Flame_Html_Element.text("Attack Roll:"), div([ class$prime("max") ])([ Flame_Html_Element.text("") ]), mkButton(new RemoveAttackRoll(attack))("delete")("Remove Attack Roll") ]) ]);
};
var loadState = function (model) {
    return function __do() {
        var w = Web_HTML.window();
        var s = Web_HTML_Window.localStorage(w)();
        var item = Web_Storage_Storage.getItem("magiitems-tools-diceroller")(s)();
        if (item instanceof Data_Maybe.Nothing) {
            return model;
        };
        if (item instanceof Data_Maybe.Just) {
            var v = readJSON(item.value0);
            if (v instanceof Data_Either.Left) {
                return model;
            };
            if (v instanceof Data_Either.Right) {
                return v.value0;
            };
            throw new Error("Failed pattern match at ToolsApp (line 143, column 18 - line 145, column 35): " + [ v.constructor.name ]);
        };
        throw new Error("Failed pattern match at ToolsApp (line 141, column 3 - line 145, column 35): " + [ item.constructor.name ]);
    };
};
var initSave = /* #__PURE__ */ (function () {
    return {
        description: "",
        advantage: false,
        disadvantage: false,
        saveBonus: 0,
        saveRoll: [  ],
        targetDC: Data_Maybe.Nothing.value
    };
})();
var updateSave = function (v) {
    return function (v1) {
        if (v1 instanceof Update) {
            return new Data_Tuple.Tuple({
                attackRolls: v.attackRolls,
                savingThrows: updateArray1(v.savingThrows)(v1.value0)(v1.value1)
            }, [ pure1(new Data_Maybe.Just(SaveState.value)) ]);
        };
        if (v1 instanceof Description) {
            return new Data_Tuple.Tuple(v, [ pure1(new Data_Maybe.Just(new Save(new Update(v1.value0, {
                advantage: v1.value0.advantage,
                disadvantage: v1.value0.disadvantage,
                saveBonus: v1.value0.saveBonus,
                saveRoll: v1.value0.saveRoll,
                targetDC: v1.value0.targetDC,
                description: v1.value1
            })))) ]);
        };
        if (v1 instanceof Bonus) {
            return new Data_Tuple.Tuple(v, [ pure1(new Data_Maybe.Just(new Save(new Update(v1.value0, {
                description: v1.value0.description,
                advantage: v1.value0.advantage,
                disadvantage: v1.value0.disadvantage,
                saveRoll: v1.value0.saveRoll,
                targetDC: v1.value0.targetDC,
                saveBonus: v1.value1
            })))) ]);
        };
        if (v1 instanceof DC) {
            return new Data_Tuple.Tuple(v, [ pure1(new Data_Maybe.Just(new Save(new Update(v1.value0, {
                description: v1.value0.description,
                advantage: v1.value0.advantage,
                disadvantage: v1.value0.disadvantage,
                saveBonus: v1.value0.saveBonus,
                saveRoll: v1.value0.saveRoll,
                targetDC: new Data_Maybe.Just(v1.value1)
            })))) ]);
        };
        if (v1 instanceof Advantage) {
            return new Data_Tuple.Tuple(v, [ pure1(new Data_Maybe.Just(new Save(new Update(v1.value0, {
                description: v1.value0.description,
                disadvantage: v1.value0.disadvantage,
                saveBonus: v1.value0.saveBonus,
                saveRoll: v1.value0.saveRoll,
                targetDC: v1.value0.targetDC,
                advantage: v1.value1
            })))) ]);
        };
        if (v1 instanceof Disadvantage) {
            return new Data_Tuple.Tuple(v, [ pure1(new Data_Maybe.Just(new Save(new Update(v1.value0, {
                description: v1.value0.description,
                advantage: v1.value0.advantage,
                saveBonus: v1.value0.saveBonus,
                saveRoll: v1.value0.saveRoll,
                targetDC: v1.value0.targetDC,
                disadvantage: v1.value1
            })))) ]);
        };
        if (v1 instanceof Roll) {
            return new Data_Tuple.Tuple(v, [ map(function ($396) {
                return Data_Maybe.Just.create(Save.create($396));
            })(map(Update.create(v1.value0))(liftEffect(rollSave(v1.value0)))) ]);
        };
        if (v1 instanceof Remove) {
            return new Data_Tuple.Tuple({
                attackRolls: v.attackRolls,
                savingThrows: $$delete(v1.value0)(v.savingThrows)
            }, [ pure1(new Data_Maybe.Just(SaveState.value)) ]);
        };
        if (v1 instanceof Add) {
            return new Data_Tuple.Tuple({
                attackRolls: v.attackRolls,
                savingThrows: Data_Array.snoc(v.savingThrows)(initSave)
            }, [ pure1(new Data_Maybe.Just(SaveState.value)) ]);
        };
        throw new Error("Failed pattern match at ToolsApp (line 98, column 1 - line 98, column 75): " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var initModel = /* #__PURE__ */ (function () {
    return {
        attackRolls: [ {
            attackBonus: 5,
            advantage: false,
            disadvantage: false,
            description: "Guantlet GFB",
            targetAC: 0,
            attackRoll: [  ],
            damageDice: [ {
                diceType: 8,
                diceCount: 1,
                damageBonus: 7,
                damageRoll: [  ],
                damageType: "Thunder"
            }, {
                diceType: 4,
                diceCount: 1,
                damageBonus: 0,
                damageRoll: [  ],
                damageType: "Acid"
            }, {
                diceType: 8,
                diceCount: 2,
                damageBonus: 10,
                damageRoll: [  ],
                damageType: "Fire"
            } ]
        } ],
        savingThrows: [ {
            advantage: false,
            disadvantage: false,
            saveBonus: 0,
            saveRoll: [  ],
            targetDC: Data_Maybe.Nothing.value,
            description: "STR Save"
        }, {
            advantage: false,
            disadvantage: false,
            saveBonus: 10,
            saveRoll: [  ],
            targetDC: Data_Maybe.Nothing.value,
            description: "INT Save"
        } ]
    };
})();
var init = /* #__PURE__ */ (function () {
    return new Data_Tuple.Tuple(initModel, [ pure1(new Data_Maybe.Just(LoadState.value)) ]);
})();
var fromStr = function (s) {
    var v = Data_Int.fromString(s);
    if (v instanceof Data_Maybe.Nothing) {
        return 0;
    };
    if (v instanceof Data_Maybe.Just) {
        return v.value0;
    };
    throw new Error("Failed pattern match at ToolsApp (line 301, column 3 - line 303, column 17): " + [ v.constructor.name ]);
};
var mkNumber = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Data_Maybe.Just) {
                return div([ class$prime("field border") ])([ input([ Flame_Html_Attribute_Internal["type$prime"]("number"), Flame_Html_Attribute_Internal.value(show(v2.value0)), Flame_Html_Event.onInput(function (x) {
                    return v1(fromStr(x));
                }) ]), span([ class$prime("helper") ])([ Flame_Html_Element.text(v) ]) ]);
            };
            if (v2 instanceof Data_Maybe.Nothing) {
                return div([ class$prime("field border") ])([ input([ Flame_Html_Attribute_Internal["type$prime"]("number"), Flame_Html_Event.onInput(function (x) {
                    return v1(fromStr(x));
                }) ]), span([ class$prime("helper") ])([ Flame_Html_Element.text(v) ]) ]);
            };
            throw new Error("Failed pattern match at ToolsApp (line 287, column 1 - line 287, column 66): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var viewSavingThrow = function (save) {
    return article_([ nav([ class$prime("grid") ])([ div([ class$prime("s2") ])([ mkText("Description")(function (s) {
        return new Save(new Description(save, s));
    })(save.description) ]), div([ class$prime("s2") ])([ mkNumber("Save Bonus")(function (b) {
        return new Save(new Bonus(save, b));
    })(new Data_Maybe.Just(save.saveBonus)) ]), div([ class$prime("s1") ])([ mkCheckbox("Advantage")("arrow_upward")(function (b) {
        return new Save(new Advantage(save, b));
    })(save.advantage), mkCheckbox("Disadvantage")("arrow_downward")(function (b) {
        return new Save(new Disadvantage(save, b));
    })(save.disadvantage) ]), div([ class$prime("s2") ])([ mkNumber("Target DC")(function (d) {
        return new Save(new DC(save, d));
    })(save.targetDC) ]), div([ class$prime("s1") ])([ mkButton(new Save(new Roll(save)))("Casino")("Roll The Dice!") ]), div([ class$prime("s3") ])([ showSaveResult(save) ]), div([ class$prime("s1") ])([ mkButton(new Save(new Remove(save)))("delete")("Remove Saving Throw") ]) ]) ]);
};
var view = function (model) {
    return main([ class$prime("responsive") ])([ div_([ header([ class$prime("fill") ])([ nav_([ h6([ class$prime("max left-align") ])([ Flame_Html_Element.text("Attack Rolls") ]), div([ class$prime("max") ])([ Flame_Html_Element.text("") ]), mkButton(AddAttackRoll.value)("add")("Add Attack Roll") ]) ]), div_1([ map1(viewAttackRoll)(model.attackRolls) ]), Flame_Html_Element.br, header([ class$prime("fill") ])([ nav_([ h6([ class$prime("max left-align") ])([ Flame_Html_Element.text("Saving Throws") ]), div([ class$prime("max") ])([ Flame_Html_Element.text("") ]), mkButton(new Save(Add.value))("add")("Add Saving Throw") ]) ]), div_1([ map1(viewSavingThrow)(model.savingThrows) ]) ]), Flame_Html_Element.br, header([ class$prime("fill") ])([ nav_([ h6([ class$prime("max left-align") ])([ Flame_Html_Element.text("Clear saved state") ]), div([ class$prime("max") ])([ Flame_Html_Element.text("") ]), mkButton(ClearState.value)("delete")("Clear saved state") ]) ]) ]);
};
var clearState = function __do() {
    var w = Web_HTML.window();
    var s = Web_HTML_Window.localStorage(w)();
    Web_Storage_Storage.removeItem("magiitems-tools-diceroller")(s)();
    return initModel;
};
var update = function (v) {
    return function (v1) {
        if (v1 instanceof Save) {
            return updateSave(v)(v1.value0);
        };
        if (v1 instanceof SaveState) {
            return new Data_Tuple.Tuple(v, [ map(function ($397) {
                return Data_Maybe.Just.create(StateSaved.create($397));
            })(liftEffect(saveState(v))) ]);
        };
        if (v1 instanceof LoadState) {
            return new Data_Tuple.Tuple(v, [ map(function ($398) {
                return Data_Maybe.Just.create(StateLoaded.create($398));
            })(liftEffect(loadState(v))) ]);
        };
        if (v1 instanceof StateLoaded) {
            return new Data_Tuple.Tuple(v1.value0, [  ]);
        };
        if (v1 instanceof ClearState) {
            return new Data_Tuple.Tuple(v, [ map(function ($399) {
                return Data_Maybe.Just.create(StateLoaded.create($399));
            })(liftEffect(clearState)) ]);
        };
        return new Data_Tuple.Tuple(v, [  ]);
    };
};
export {
    AddAttackRoll,
    RemoveAttackRoll,
    RollAttackRoll,
    Save,
    SaveState,
    StateSaved,
    LoadState,
    StateLoaded,
    ClearState,
    init,
    update,
    view
};

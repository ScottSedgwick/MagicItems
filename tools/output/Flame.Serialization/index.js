// Generated by purs version 0.15.15
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Argonaut_Core from "../Data.Argonaut.Core/index.js";
import * as Data_Argonaut_Decode_Class from "../Data.Argonaut.Decode.Class/index.js";
import * as Data_Argonaut_Decode_Error from "../Data.Argonaut.Decode.Error/index.js";
import * as Data_Argonaut_Decode_Generic from "../Data.Argonaut.Decode.Generic/index.js";
import * as Data_Argonaut_Decode_Parser from "../Data.Argonaut.Decode.Parser/index.js";
import * as Data_Argonaut_Encode_Class from "../Data.Argonaut.Encode.Class/index.js";
import * as Data_Argonaut_Encode_Generic from "../Data.Argonaut.Encode.Generic/index.js";
import * as Data_Bifunctor from "../Data.Bifunctor/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Partial from "../Partial/index.js";
var crashWith = /* #__PURE__ */ Partial.crashWith();
var show = /* #__PURE__ */ Data_Show.show(Data_Show.showString);
var bind = /* #__PURE__ */ Control_Bind.bind(Data_Either.bindEither);
var unserialize = function (dict) {
    return dict.unserialize;
};
var unsafeUnserialize = function (dictUnserializeState) {
    var unserialize1 = unserialize(dictUnserializeState);
    return function (str) {
        var v = unserialize1(str);
        if (v instanceof Data_Either.Right) {
            return v.value0;
        };
        if (v instanceof Data_Either.Left) {
            return crashWith(show(v.value0));
        };
        throw new Error("Failed pattern match at Flame.Serialization (line 45, column 42 - line 47, column 40): " + [ v.constructor.name ]);
    };
};
var serialize = function (dict) {
    return dict.serialize;
};
var jsonStringError = /* #__PURE__ */ Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Argonaut_Decode_Error.printJsonDecodeError);
var recordUnserializeState = function (dictGDecodeJson) {
    var decodeJson = Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeRecord(dictGDecodeJson)());
    return function () {
        return {
            unserialize: function (model) {
                return jsonStringError(bind(Data_Argonaut_Decode_Parser.parseJson(model))(function (json) {
                    return decodeJson(json);
                }));
            }
        };
    };
};
var genericUnserializeState = function (dictGeneric) {
    var genericDecodeJson = Data_Argonaut_Decode_Generic.genericDecodeJson(dictGeneric);
    return function (dictDecodeRep) {
        var genericDecodeJson1 = genericDecodeJson(dictDecodeRep);
        return {
            unserialize: function (model) {
                return jsonStringError(bind(Data_Argonaut_Decode_Parser.parseJson(model))(function (json) {
                    return genericDecodeJson1(json);
                }));
            }
        };
    };
};
var genericSerializeState = function (dictGeneric) {
    var genericEncodeJson = Data_Argonaut_Encode_Generic.genericEncodeJson(dictGeneric);
    return function (dictEncodeRep) {
        return {
            serialize: (function () {
                var $29 = genericEncodeJson(dictEncodeRep);
                return function ($30) {
                    return Data_Argonaut_Core.stringify($29($30));
                };
            })()
        };
    };
};
var encodeJsonSerializeState = function (dictGEncodeJson) {
    var encodeJson = Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeRecord(dictGEncodeJson)());
    return function () {
        return {
            serialize: function ($31) {
                return Data_Argonaut_Core.stringify(encodeJson($31));
            }
        };
    };
};
export {
    serialize,
    unserialize,
    unsafeUnserialize,
    recordUnserializeState,
    genericUnserializeState,
    encodeJsonSerializeState,
    genericSerializeState
};

// Generated by purs version 0.15.15
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_String_CodePoints from "../Data.String.CodePoints/index.js";
import * as Data_String_CodeUnits from "../Data.String.CodeUnits/index.js";
import * as Data_String_Common from "../Data.String.Common/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Description from "../Description/index.js";
import * as Flame_Html_Attribute_Internal from "../Flame.Html.Attribute.Internal/index.js";
import * as Flame_Html_Element from "../Flame.Html.Element/index.js";
import * as Flame_Html_Event from "../Flame.Html.Event/index.js";
import * as LineageData from "../LineageData/index.js";
import * as Sources from "../Sources/index.js";
import * as Unshow from "../Unshow/index.js";
var toNodeArray = /* #__PURE__ */ Flame_Html_Element.toNodeArray(Flame_Html_Element.toNodeNodeDataNodeData);
var toNodeArray1 = /* #__PURE__ */ Flame_Html_Element.toNodeArray(Flame_Html_Element.toNodeHtmlHtml);
var article = /* #__PURE__ */ Flame_Html_Element.article(toNodeArray)(toNodeArray1);
var class$prime = /* #__PURE__ */ Flame_Html_Attribute_Internal["class$prime"](Flame_Html_Attribute_Internal.toClassListString);
var details_ = /* #__PURE__ */ Flame_Html_Element.details_(toNodeArray1);
var summary_ = /* #__PURE__ */ Flame_Html_Element.summary_(toNodeArray1);
var div = /* #__PURE__ */ Flame_Html_Element.div(toNodeArray)(toNodeArray1);
var strong_ = /* #__PURE__ */ Flame_Html_Element.strong_(toNodeArray1);
var show = /* #__PURE__ */ Data_Show.show(Sources.showSource);
var map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);
var unshow = /* #__PURE__ */ Unshow.unshow(Sources.unshowSource);
var option = /* #__PURE__ */ Flame_Html_Element.option(toNodeArray)(Flame_Html_Element.toNodeStringHtml);
var i_ = /* #__PURE__ */ Flame_Html_Element.i_(toNodeArray1);
var select = /* #__PURE__ */ Flame_Html_Element.select(toNodeArray)(toNodeArray1);
var label_ = /* #__PURE__ */ Flame_Html_Element.label_(toNodeArray1);
var input = /* #__PURE__ */ Flame_Html_Element.input(toNodeArray);
var sort = /* #__PURE__ */ Data_Array.sort(Sources.ordSource);
var nub = /* #__PURE__ */ Data_Array.nub(Sources.ordSource);
var nav = /* #__PURE__ */ Flame_Html_Element.nav(toNodeArray)(toNodeArray1);
var compare = /* #__PURE__ */ Data_Ord.compare(Data_Ord.ordString);
var main_ = /* #__PURE__ */ Flame_Html_Element.main_(toNodeArray1);
var ChangeTitle = /* #__PURE__ */ (function () {
    function ChangeTitle(value0) {
        this.value0 = value0;
    };
    ChangeTitle.create = function (value0) {
        return new ChangeTitle(value0);
    };
    return ChangeTitle;
})();
var ChangeSource = /* #__PURE__ */ (function () {
    function ChangeSource(value0) {
        this.value0 = value0;
    };
    ChangeSource.create = function (value0) {
        return new ChangeSource(value0);
    };
    return ChangeSource;
})();
var updateHref = function (xs) {
    var v = Data_String_CodePoints.indexOf("http://dnd5e.wikidot.com/lineage:")(xs);
    if (v instanceof Data_Maybe.Nothing) {
        return xs;
    };
    if (v instanceof Data_Maybe.Just) {
        return "lineage.html#" + Data_String_CodePoints.drop(40)(xs);
    };
    throw new Error("Failed pattern match at LineageApp (line 128, column 3 - line 130, column 45): " + [ v.constructor.name ]);
};
var viewItem = function (item) {
    return article([ class$prime("grey3") ])([ details_([ summary_([ div([ class$prime("grid tiny-line") ])([ div([ class$prime("s6") ])([ strong_([ Flame_Html_Element.text(item.title) ]) ]), div([ class$prime("s6") ])([ Flame_Html_Element.text(show(item.source)) ]) ]) ]), article([ class$prime("white") ])(map(Description.mkDescription(updateHref))(item.description)) ]) ]);
};
var update = function (v) {
    return function (v1) {
        if (v1 instanceof ChangeTitle) {
            return new Data_Tuple.Tuple({
                fltSource: v.fltSource,
                fltTitle: v1.value0
            }, [  ]);
        };
        if (v1 instanceof ChangeSource) {
            return new Data_Tuple.Tuple({
                fltTitle: v.fltTitle,
                fltSource: unshow(v1.value0)
            }, [  ]);
        };
        throw new Error("Failed pattern match at LineageApp (line 42, column 1 - line 42, column 70): " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var mkSelect = function (dictShow) {
    var show1 = Data_Show.show(dictShow);
    return function (dictEq) {
        var eq = Data_Eq.eq(Data_Maybe.eqMaybe(dictEq));
        return function (caption) {
            return function (msg) {
                return function (opts) {
                    return function (value) {
                        var nullOption = option([ Flame_Html_Attribute_Internal.value("All"), Flame_Html_Attribute_Internal.selected(eq(value)(Data_Maybe.Nothing.value)) ])("All");
                        var mkOption = function (x) {
                            return option([ Flame_Html_Attribute_Internal.value(show1(x)), Flame_Html_Attribute_Internal.selected(eq(value)(new Data_Maybe.Just(x))) ])(show1(x));
                        };
                        return div([ class$prime("field label prefix border") ])([ i_([ Flame_Html_Element.text("search") ]), select([ Flame_Html_Event.onInput(msg) ])(Data_Array.cons(nullOption)(map(mkOption)(opts))), label_([ Flame_Html_Element.text(caption) ]) ]);
                    };
                };
            };
        };
    };
};
var mkSelect1 = /* #__PURE__ */ mkSelect(Sources.showSource)(Sources.eqSource);
var mkInput = function (caption) {
    return function (onInput) {
        return function (value) {
            return div([ class$prime("field label prefix border") ])([ i_([ Flame_Html_Element.text("search") ]), input([ Flame_Html_Attribute_Internal["type$prime"]("text"), Flame_Html_Attribute_Internal.value(value), Flame_Html_Event.onInput(onInput) ]), label_([ Flame_Html_Element.text(caption) ]) ]);
        };
    };
};
var viewFilter = function (model) {
    var sources = sort(nub(map(function (i) {
        return i.source;
    })(LineageData.lineages)));
    return nav([ class$prime("top white") ])([ article([ class$prime("container white") ])([ div([ class$prime("grid") ])([ div([ class$prime("s6") ])([ mkInput("Lineage")(ChangeTitle.create)(model.fltTitle) ]), div([ class$prime("s6") ])([ mkSelect1("Source")(ChangeSource.create)(sources)(model.fltSource) ]) ]) ]) ]);
};
var init = /* #__PURE__ */ (function () {
    return new Data_Tuple.Tuple({
        fltTitle: "",
        fltSource: Data_Maybe.Nothing.value
    }, [  ]);
})();
var filterTitle = function (v) {
    return function (v1) {
        if (v === "") {
            return true;
        };
        return Data_String_CodeUnits.contains(Data_String_Common.toLower(v))(Data_String_Common.toLower(v1));
    };
};
var filterMaybe = function (dictEq) {
    var eq = Data_Eq.eq(dictEq);
    return function (v) {
        return function (v1) {
            if (v instanceof Data_Maybe.Nothing) {
                return true;
            };
            if (v instanceof Data_Maybe.Just) {
                return eq(v.value0)(v1);
            };
            throw new Error("Failed pattern match at LineageApp (line 98, column 1 - line 98, column 57): " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var filterMaybe1 = /* #__PURE__ */ filterMaybe(Sources.eqSource);
var filterItem = function (model) {
    return function (item) {
        return item.title !== "" && (filterTitle(model.fltTitle)(item.title) && filterMaybe1(model.fltSource)(item.source));
    };
};
var viewItems = function (model) {
    var items = Data_Array.sortBy(function (a) {
        return function (b) {
            return compare(a.title)(b.title);
        };
    })(Data_Array.filter(filterItem(model))(LineageData.lineages));
    return map(viewItem)(items);
};
var view = function (model) {
    return main_(Data_Array.cons(viewFilter(model))(viewItems(model)));
};
export {
    ChangeTitle,
    ChangeSource,
    init,
    update,
    view,
    updateHref
};
